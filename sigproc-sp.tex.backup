% THIS IS SIGPROC-SP.TEX - VERSION 3.1
% WORKS WITH V3.2SP OF ACM_PROC_ARTICLE-SP.CLS
% APRIL 2009
%
% It is an example file showing how to use the 'acm_proc_article-sp.cls' V3.2SP
% LaTeX2e document class file for Conference Proceedings submissions.
% ----------------------------------------------------------------------------------------------------------------
% This .tex file (and associated .cls V3.2SP) *DOES NOT* produce:
%       1) The Permission Statement
%       2) The Conference (location) Info information
%       3) The Copyright Line with ACM data
%       4) Page numbering
% ---------------------------------------------------------------------------------------------------------------
% It is an example which *does* use the .bib file (from which the .bbl file
% is produced).
% REMEMBER HOWEVER: After having produced the .bbl file,
% and prior to final submission,
% you need to 'insert'  your .bbl file into your source .tex file so as to provide
% ONE 'self-contained' source file.
%
% Questions regarding SIGS should be sent to
% Adrienne Griscti ---> griscti@acm.org
%
% Questions/suggestions regarding the guidelines, .tex and .cls files, etc. to
% Gerald Murray ---> murray@hq.acm.org
%
% For tracking purposes - this is V3.1SP - APRIL 2009

\documentclass{acm_proc_article-sp}

\begin{document}

\title{Pollination in MAIDS: Detecting and Combating\\Passive Intrusions in a Multi-agent System}
% \subtitle{[Extended Abstract]
% \titlenote{A full version of this paper is available as
% \textit{Author's Guide to Preparing ACM SIG Proceedings Using
% \LaTeX$2_\epsilon$\ and BibTeX} at
% \texttt{www.acm.org/eaddress.htm}}}
%
% You need the command \numberofauthors to handle the 'placement
% and alignment' of the authors beneath the title.
%
% For aesthetic reasons, we recommend 'three authors at a time'
% i.e. three 'name/affiliation blocks' be placed beneath the title.
%
% NOTE: You are NOT restricted in how many 'rows' of
% "name/affiliations" may appear. We just ask that you restrict
% the number of 'columns' to three.
%
% Because of the available 'opening page real-estate'
% we ask you to refrain from putting more than six authors
% (two rows with three columns) beneath the article title.
% More than six makes the first-page appear very cluttered indeed.
%
% Use the \alignauthor commands to handle the names
% and affiliations for an 'aesthetic maximum' of six authors.
% Add names, affiliations, addresses for
% the seventh etc. author(s) as the argument for the
% \additionalauthors command.
% These 'additional authors' will be output/set for you
% without further effort on your part as the last section in
% the body of your article BEFORE References or any Appendices.

\numberofauthors{4} %  in this sample file, there are a *total*
% of EIGHT authors. SIX appear on the 'first-page' (for formatting
% reasons) and the remaining two appear in the \additionalauthors section.
%
\author{
% You can go ahead and credit any number of authors here,
% e.g. one 'row of three' or two rows (consisting of one row of three
% and a second row of one, two or three).
%
% The command \alignauthor (no curly braces needed) should
% precede each author name, affiliation/snail-mail address and
% e-mail address. Additionally, tag each line of
% affiliation/address with \affaddr, and tag the
% e-mail address with \email.
%
% 1st. author
\alignauthor
Jeremy Kackley\\
       \affaddr{Noetic Strategies, Inc}\\
       \affaddr{P.O. Box 22225}\\
       \affaddr{Huntsville, AL 35814}\\
       \email{jeremy.kackley@gmail.com}
% 2nd. author
\alignauthor
James Jacobs\\
       \affaddr{Jackson State University/CDID}\\
       \affaddr{1230 Raymond Rd.}\\
       \affaddr{Jackson, MS 39204}\\
       \email{jjacobs@c-did.com}
% 3rd. author
\alignauthor 
Paulus Wahjudi\\
       \affaddr{Weisberg Division of Engineering \& Computer Science}\\
       \affaddr{Marshall University}\\
       \affaddr{Huntington, WV 25755}\\
       \email{wahjudi@marshall.edu}
% \and  % use '\and' if you need 'another row' of author names
% 4th. author
\and
\alignauthor 
Jean Gourd\\
       \affaddr{Louisiana Tech University}\\
       \affaddr{Center for Secure Cyberspace}\\
       \affaddr{P.O. Box 10348}\\
       \affaddr{Ruston, LA 71272}\\
       \email{jgourd@latech.edu}
% There's nothing stopping you putting the seventh, eighth, etc.
% author on the opening page (as the 'third row') but we ask,
% for aesthetic reasons that you place these 'additional authors'
% in the \additional authors block, viz.
% \additionalauthors{Additional authors: John Smith (The Th{\o}rv{\"a}ld Group,
% email: {\texttt{jsmith@affiliation.org}}) and Julius P.~Kumquat
% (The Kumquat Consortium, email: {\texttt{jpkumquat@consortium.net}}).}
}
% \date{30 July 1999}
% Just remember to make sure that the TOTAL number of authors
% is the number that will appear on the first page PLUS the
% number that will appear in the \additionalauthors section.

\maketitle
\begin{abstract}
In our previous work \cite{kackley09}, we introduced a Multi-Agent Intrusion Detection System (MAIDS) aimed at detecting attackers through the observation of anomalous data.  When detecting attacks that originate from passive nodes (that essentially just observe), relying upon anomalies presents a major weakness.  In this paper, we extend our framework by integrating a novel process we call {\it pollination} that allows for the traceback of an agent's path in the network by leaving evidence of migration on both the agent and the node.  As this work is fairly new, we provide a high-level overview and discuss how such a process might work within the context of our framework in order to detect passive attackers.
\end{abstract}

% A category with the (minimum) three required fields
% \category{H.4}{Information Systems Applications}{Miscellaneous}
%A category including the fourth, optional field follows...
% \category{D.2.8}{Software Engineering}{Metrics}[complexity measures, performance measures]

% \terms{Mobile Agents, Distributed Computing, Cyber Security}

\keywords{Mobile Agents, Distributed Computing, Cyber Security} % NOT required for Proceedings

\section{Introduction}
%note: Introduction to the conceptual view of an MA framework. (IE adding passive-attacker detection to the framework) -- so really this is just an introduction at a general level (MA, framework, cyber security, computer forensics, etc).

In our previous related work \cite{kackley09}, we introduced a mobile agent infrastructure that assisted in detecting and combating compromised network nodes.  A weakness in this infrastructure is the inability to detect compromised nodes that are passively intercepting information.

The ability to identify passive attackers, compromised network nodes, compromised agents and systems in our Multi-Agent Intrusion Detection System (MAIDS) requires the ability detect anomalies and changes in the mobile agent network and associate these changes with a specific threat.  Several techniques exist in the mobile agent research community to eliminate the ability of the network to change by hardening the network (\cite{}).  Other techniques rely on the ability to detect, trace and eliminate the anomalies in either the network or the agents (\cite{}).

Much of the existing research in mobile agent security is focused on hardening the agent or the agencies against attack (e.g., in \cite{lin10}).  The focus is primarily on encryption or encapsulation techniques to harden the agent or agencies from attackers.  The problem with encryption or hardening techniques is that they only buy time before the information is decoded or vulnerabilities develop thereby compromising the mobile agent network.  The general technique to buy extra time is to change the defensive strategy more quickly than the time it takes to compromise the system.  The inherent problem with this approach is the inability to detect a failure in the system in a timely manner.  For example, a passive node could simply collect data for a period of time long enough to break the defense and after which have little chance of being detected.

Other techniques for mobile agent protection rely on identifying and eliminating the threat.  For example, Khan et. al in \cite{khan08} introduce an identification mechanism that watermarks the agent or the transmission of the agent.  Other examples include marking the agent with packet tags (e.g., in \cite{duwairi04, goodrich02, peng07}).  These mechanisms can be used to passively identify the movements of agents by following the traces they leave in order to reconstruct a path back to the source of the anomaly.  The problem with these techniques is one of limited focus in that they do not look at patterns found in the entire network.  They merely compare changes of individual instances in the network.  In order to address passive nodes, the ability to ascertain changes in agents, the movement of agents, agencies, and the intent of agencies must be considered.

Further tracking requires active involvement and transmission of activity to determine a mobile agent's status \cite{sreedevi09}.  Although active tracking does give a better picture of the mobile agent network status, the active scheme mandates communication overhead.

\section{Framework Overview}
The framework introduced in \cite{kackley09} and illustrated in Figure~\ref{fig:framework} presented MAIDS, an agent based framework for detecting compromised platforms.  The key aspect of this framework is the concept of threat levels, and it provides an effective method to detect and combat compromised platforms.  Threat levels correspond to a global view of how dangerous the current situation is; furthermore, they serve as a controlling factor for the operation of the framework.  These levels range from {\it Threat Level One}, which can be considered ``situation normal'' and where strictly passive observation occurs, to {\it Threat Level Four}, where action is taken against suspected nodes.  The progressive network threat levels allow for dynamic and adaptive detection with varying degrees of response.  Once a node is suspected of being compromised, it (and any nodes that come in contact with it) will be thoroughly investigated before any verdict is given.  Depending on the algorithm used to observe the network traffic, MAIDS can be adapted to observe the smallest piece of data or it can focus the network as whole.  However, MAIDS is dependent on one key element: the active data packets sent by the compromised platform that the framework can then intercept and detect for irregularities.  In the event that a compromised platform is passive and focuses only on intercepting information routed through it without actively sending packets to other nodes as an attempt to obtain information and/or to infect other nodes, MAIDS will never suspect that node as being compromised.  This weakness will be addressed in this paper through the utilization of a Mobile Agents Pollination (MAP) technique.  The following provides a brief overview of each threat level; for more detail, the reader is referred to our previous work in \cite{kackley09}.

\subsection{Threat Level One: Network Observation}
This threat level corresponds to normal network situation and is the default.  The important action that takes place at this threat level is the establishment and maintenance of a network of {\it Probe} agents.  These {\it Probes} can be thought of as a distributed set of eyes and ears in the network.  This level also sees the establishment of a Central Authority Node (CAN) that serves as the nerve center of the framework.  As agents percolate through the network, they carry reports generated by the {\it Probes}.  These reports are ultimately delivered to the CAN which makes judgements based upon them.  In this way, the CAN monitors and maintains a view (possible delayed) of the entire network at a relatively low cost to performance.  This view can be used to search for anomalies, such as a disproportionate number of agents arriving to those leaving a given node*****.  Anomalies are domain-dependent.  A certain level of anomalies is expected as a by-product of network behavior, thus a threshold value $T_1$ is defined for this threat level that indicates the maximum amount of anomalies to be expected in an non-compromised network.  Rates above this value constitute an elevation of the threat level.

\begin{figure}
\centering
\includegraphics[scale=0.45]{maids}
\caption{The MAIDS Framework}
\label{fig:framework}
\end{figure}

\subsection{Threat Level Two: Network Suspected Compromise Investigation}
At this threat level the network is suspected to be compromised.  This triggers the CAN to generate two agent types: a {\it Commander} agent and a {\it Detective} agent.  {\it Commanders} are akin to a localized CAN, the purpose of which is to reduce report latency.  {\it Detectives} are proactive versions of {\it Probes} that communicate observations directly to their {\it Commander}.  The objective is to blockade the suspected node(s) and investigate incoming and outgoing traffic to determine if anomalies are still occurring at a level greater than the threshold value.  Inherently, there is a network effect whereby any node that can only communicate through a suspected node is, of course, also suspect and cannot be trusted.  Thus, the virtual blockade could indeed comprise a major section of the network.  The CAN takes into account this network effect when placing {\it Detectives} so as not to compromise the aggregate data.  Another important point is that this is merely an investigative roadblock; communication is investigated and monitored but is not stopped.  Again, anomalies are domain dependent, but it makes logical sense that there would be more types of anomalies defined at this level.  Additionally, $T_2$ is the second threshold value of anomaly detection prior to elevation to Threat Level Three.

\subsection{Threat Level Three: Network Compromise Confirmation}
This threat level sees the creation of an additional type of agent, the {\it Secret Agent}, that is eseentially something of a sacrificial agent.  Its actions (and the expected results thereof) are predefined; therefore, it can be sent to a compromised node, and if the results are not observed exterior to the node or the communication of its observed effects do not match the observations of {\it Detectives}, then an inference can be made that a compromise has occurred.  It is possible that the {\it Secret Agent} will never be heard from again, in which case this process must be repeated until either the agent survives or a set number of agents have been sacrificed.  It is also possible at this threat level to either elevate to Threat Level Four, or to deescalate if the {\it Secret Agent} is not interfered with.

\subsection{Threat Level Four: Network Compromise Resolution}
For the most elevated threat level, the assumption is that a compromise has occurred.  At this point, there are a variety of actions that can be taken.  The appropriate action is very domain dependent; for example, if resource availability is more important than information security then simply alerting a human while continuing to gather information is the appropriate response.  Alternatively, if information security is more important than availability or redundant resources exist, then automated responses are possible.  The least severe response would be rerouting requests from the compromised node to a sandbox for future analysis and to prevent the compromise of the rest of the network (presumably without making it obvious to the attacker that he has been detected).  A more severe action would be to blockade the node from the network, thereby preventing any requests from leaving or going to that node.  The most severe would be attempting to remove the node from the network or possibly crash it (for example via a distributed denial of service attack or some out of band signal).

\section{Pollination}
The proposed pollination scheme in this work is a passive system that allows minimum overhead with active monitoring to provide near real-time discovery of the mobile agent network status.  Pollination involves the exchange of {\it pollen} between the mobile agent and the agency on a node to provide a tracking and a pattern mechanism for use with inference modeling.  The pollen allows the tracking of an individual agent's movements and intentions, and the pollination patterns in both the agent and the node allow for network and agency status to be inferred.  The inference model then classifies the intent, and the security protocols in MAIDS will be enacted based on the perceived intent.  Scaling of the pollination model allows for overhead to be minimized to the level of the threat.

The concept of pollination is designed to create a series of trail markers on both the nodes visited by a mobile agent and the mobile agent itself.  The trail markers allow immediate identification of what nodes the agent has visited by simple inspection of the pollen the agent is carrying.  The inspection of an agent's path via the pollen is performed at its destination.  By traversing the trail of pollen back to the source node one can trace the agent's migration history.

The information provided by pollination is meant to be both historical and active.  Historical information can be used to determine the sequence of events after an event has occurred.  Active information is obtained from real time inspection and is used to determine if an event has occured.  For example, in many cases the data and the code that processes it are not singly sensitive.  However, the ability to simultaneously obtain both the data and the code has the potential to cause harm to the agent's designer.  If both nodes are marked and each node in the network is sensitive to this situation, a mobile agent containing pollen associated with both nodes can be apprehended.

Security in information system is an important aspect for all applications.  Such security covers three main components: data security, machine security and network security.  One of the key issues involves the authentication of an entity in relation to its access to various resources.  A trusted entity may become compromised, and thus untrustworthy, despite being positively identified.  Determining if an entity has been compromised is an important but complicated process.  The pollination concept introduced in this work extends the capability of MAIDS to detect compromised platforms that passively intercept information.

\subsection{Mobile Agents Pollination}
Mobile Agents Pollination (MAP) is a concept that addresses some of the issues with the MAIDS framework, namely that of detecting passive attacks, by identifying a mobile agent's movements and actions within the network.  MAP uses {\it pollen} to uniquely identify the agencies or groups of agencies on nodes within a network.  Furthermore, MAP uses pollination to form a trail map defining the path an agent utilizes when visiting nodes in the network.  In addition to the trail map, the pollen and map properties can be utilized as action indicators to infer the meaning of the agent's visitations and the intent of agencies within the network.

MAP is similar to the natural process of flower pollination by bees.  Bees traverse a field of flowers to acquire nectar.  When bees encounter a flower, they inadvertently collect pollen from it and distribute pollen to it.  Fundamentally, a grain of pollen represents a flower and a collection of pollen on the bee represents all the flowers it has visited.  The pollen collection left by the bee at each flower represents the sequence of flowers it has visited before encountering the current flower.  The analogy relates to MAP in that the mobile agent is the bee, the nectar is the information (or data) being collected by the agent and the pollen is a node's identification marker.  The role of the mobile agent is to traverse the network of connected nodes to acquire information.  MAP defines the process where the mobile agent {\it unknowingly} collects pollen from the current node and distributes pollen from the previously visited nodes.  The pollen can then be used to quickly infer where the mobile agent has traveled and the sequence of travel.  Other traits related to the map, the pollen, and the pollen's relationship to the nodes can be utilized to expand the perceptibility of the mobile agent's activity in the network.

The main purpose of MAP is to utilize pollination for tracking a mobile agent's activity in the network.  We can then use this tracking information to infer the intent of the mobile agent and the nodes involved in the network.  Ultimately, pollen is a marker used to identify a specific node a mobile agent may visit; pollination is the process of exchanging pollen to provide a mechanism to reconstruct where the agent has been and infer the actions the agent performed.

Pollen can be unique to each node or the pollen can be unique for a subset of nodes depending on user requirements.  The pollen variation throughout the network is similar to the DNA of a flower.  The DNA for a specific node type is mostly the same between entities with minor variations making the sequence unique.  The pollen from two different node types will have a greater variation in the predominating factors.  The pollen strictly provides the identification of a node and should be dependent on the agency configuration to make the process of spoofing it difficult.  The information provided by pollination is meant for both historical and active analysis.  Historical information can be used to determine the sequence of events after an event has occurred.  Active information is used to form real time inspection in order to determine if an event has occurred.

The two key observable parameter categories involved in the process of a mobile agent collecting information while traversing the network and visiting nodes are spatial and temporal*****.  The space for MAP refers to the network space in the direction used by the node, the connection, the mobile agent, and the pollen*****.  The spatial category could be expanded to include distance for the connection and the agent's travel; however, at this time it is unclear on the usage and necessity of the metric*****.

The network's spatial reference is depicted using standard network nodal reference with connections showing the relation between the nodes.  The pollen associated with the nodes and the agents is represented by unique patterns.  The pollen grains carried by the mobile agent and distributed to the nodes maintain the pattern of the origin node.  The sequence of pollen grains creates a series of trail markers which define the spatial movements of the agent through the network.  A direction depicted by the arrow is inherent in the sequence as the agent migrates from one node to another.  The pattern allows immediate identification of what node(s) the agent visited by simple inspection of the pollen the agent is carrying.  Traversing the trail of pollen defined by the sequence will lead back to the source node.

The time for MAP is used to refer to the amount of processing the mobile agent expended at the node in terms of number of pollen grains*****.  The number of grains refers to the action time of the agent, such as time spent on the node, data examined while at a node or a ratio of time spent to data examined.  The number is associated with a grain of a specific node, and the combination of all the grain counts will indicate the time taken for the sequence to complete.  A common time reference will maintain a standard gauge for use with the analytics*****.  The actual time interval is up to the implementation; however, the granularity of the interval should represent the difference between operation actions of the mobile agents for the operations we want to identify.  The temporal reference is depicted by a count below the grains.

We acquire a time-sequence pattern by applying both the spatial and temporal components.  The time-sequence pattern maps the networks meaning to the goal of the mobile agent's movement.  The spatial, temporal and spatial-temporal observations are used to infer the meaning of the action with regard to the intent of the agent and nodes.  Associating the content description of the nodes with the pattern may allow for further identification of a mobile agent's actions.

The process of pollination leaves two distinct time-sequence trails as the mobile agent moves from node to node.  The first trail is the set of pollen attached to the agent from the simple process of visiting nodes.  The second is the set of pollen distributed along the path of nodes traveled where each node has a snapshot of the previous nodes the agent has visited.  The sets have a number of key attributes that include node references, number of pollen spores, sequence of spores and the order (or pattern) of nodes visited, and amount of pollen attached.  The pollination concept is depicted in Figure~\ref{fig:map-overview}.

\begin{figure}
\centering
\includegraphics[scale=0.45]{AgentPollen-Example}
\caption{Pollination and Mobile Agents}
\label{fig:map-overview}
\end{figure}

In this figure, an agent is migrating from Node~1 to Node~5.  At each node, the agent exchanges pollen in the process of ``doing work.''  The amount of work is quantified with the temporal reference.  The agent reaches Node~5, and the resulting pattern is depicted with the temporal references denoted by the vector $\left<2, 5, 10, 3\right>$.  Note that Node~6 is not in the agent's path and therefore no pollen is exchanged with this node or the agent.  This example serves as a base pattern or a composite of patterns that can be used to determine anomalies that occur with the agent's or node's standard operation.

\subsection{Usage of MAP in MAIDS}
In order to address passive attack we simply have analytics to infer the meaning of the change in pattern.  For example, suppose that a passive node successfully inserts itself into the network.  The node will have to understand that pollination occurs otherwise it will not be accepted.  We assume the attacker is smart enough to spoof a node (and understand that pollination occurs but not necessarily how it works) and continue with more advanced security concerns.

\begin{figure}
\centering
\includegraphics[scale=0.45]{AgentPollen-PassivenodeA}
\caption{Network with Passive Node}
\label{fig:map-eg}
\end{figure}

Suppose we mark the path agents would take from Node~1 to Node~4 (see Figure~\ref{fig:map-eg}) by marking each of the intermediate nodes with different pollen.  Every time an agent reaches Node~4, it possesses a sequence of pollen that corresponds to the path taken.  This is verified with the sequence that the agent was supposed to follow in order to determine if the agent has been compromised by an additional passive node or a violation of the agent code.  The passive node is identified by added pollen, incorrect pollen or simply the lack of pollen in the sequence inspected at the destination node.  A team of {\it Commanders} and {\it Detectives} can be used determine which node is the passive node and eliminate it.  Compromised agents can simply be eliminated from the system at Node~A or Node~B upon arrival and trigger the inspection*****.  For added security, every node along the path checks the pollen sequence and essentially provides a passive defense mechanism against corruption.

\subsection{Implementation}
The pollination process works at the application level where the agencies represent the nodes and mobile agents move throughout the network migrating from agency to agency.  The agencies each have their own unique pollen definition.  Implementing the pollen requires the ability to attach pollen and transport it with the mobile agent; it is {\it picked up} and {\it dropped off} by the agencies.  We propose that the process of attaching the pollen to the mobile agent is not performed by the agent itself in order to stick with the inadvertent nature of pollination (?).  The agent should not know or care about the pollination.  We envision the use of the manipulation of the Open System Interconnection (OSI) \cite{} model's transport layer for both attaching the pollen to the agent and transporting the pollen and agent to the destination node.  In the OSI model the application data to be transported is broken into packets and transmitted from the source to the destination.  We can add additional packets by appending the pollen to the data stream, or we can manipulate the packets using packet tagging.  Adding additional packets can be accomplished at the application level by simply appending to the end of the mobile agent in that data stream.  The addendum is removed at the agency and the pollen is recovered.

Packet tagging is accomplished by marking packets with identifiers for local purposes \cite{}.  The actual mark is part of the packet and cannot be removed; however, the mark can be modified or replaced with another mark.  This maybe an issue if the agent is transmitted to some location that is external to the system.  However, for our purposes the mobile agent is assumed to remain internally within the network.

In addition to the pollen tag itself, the count representing action at each node is used to acquire further insight into the meaning.  It is expected that a node with little information to share will require less time for the mobile agent to visit the node (i.e., less activity).  Using the activity gauge, we can infer some of the intent of both the agent and the agency.  In the example of a passive node scenario, we can expect the sharing to be minimal for the agent (as described by the label ``0'' in Figure~\ref{fig:map-eg}) with regard to the passive node's pollen.

The reverse is also possible with the relationship between the node pollen and the data stored at the node.  Using this relationship between the information of the node with the highest activity, we can infer the type of information the agent is interested in gathering and the information with little interest.  The entire concept is depicted in Figure~\ref{fig:map-eg}.

The purpose of pollination is to allow an easy identification method for activity within a mobile agent environment using pollination patterns.  Any standard inference model (e.g., fuzzy logic, neural network, Bayesian model) can be utilized to trigger DCCP security events from the pollination patterns.

A variation of the scheme can be implemented to acquire different levels of security through the network.  At a low level we are only concerned with sensitive data or applications.  For this level we simply need to pollinate those locations and track the movement of agents carying that pollen.  Agencies are always active to interpret the meaning of the mobile agents and the surrounding agencies.  The limitation of the pollination to a subset of the network has the effect of greater focusability on only the things that matter.  It also reduces the overhead associated with pollination in both time and space.

We can change the pollination patterns associated with the network on a periodic basis to ensure security.  This change can either be notified to the DCCP security team in advance or the change could simply trigger an event that allows the team to determine the appropriate action.  The latter is preferable as the addition of a mechanism to disable security for changing patterns could be an exploitable vulnerability.  The event triggered by the pattern change can be used as a test of system integrity as the process goes through the security levels and back to Threat Level 1.

The standard state of the system is primarily in Threat Level 1; however, as security concerns increase, the number of pollinated nodes increase to match the threat.  The increase can either be tactically focused on the relative sensitivity of the data or the increase can be distributed throughout the network to provide a ``big picture'' of the secured environment.  At the highest level all nodes will be pollinated, and nodes without pollen or agents not containing pollen will be apprehended.  The pollination paths not adhering to the required patterns will be examined to determine what events took place by the DCCP security agent team.

\subsection{Detecting passive compromised nodes with pollination}
Once pollination is in the framework, we can then proceed to setup a set of traps that will assist in detecting compromised passive nodes.  The purpose of the trap is to lure passive nodes to actively search for prized data that, in turn, will expose their cover.  The CAN will randomly select a set of strategic nodes of interest (SNI) throughout the network as the host of the prized data.  Each trap will have a designated area of effect that determines the number of nodes that are affected.  CAN will then send agents to each node with the objective of broadcasting the existence of crucial data in the SNI.  The CAN will then observe network activities and validate the pollen of every agent that visited the SNI.  When an invalid pollen pattern is found, CAN will then raise the network situational awareness to Threat Level 2 and then proceed to investigate the path taken by the agent to reach the SNI.  Every node that the suspected agent came in contact with will then be considered a suspected compromised node.  The Commander agent and Detective agents will then proceed the investigation to confirm whether a node is compromised through Threat Level 3.

\section{Mole Example}
Blah.

\section{Conclusion and Future Work}
The DCCP framework provides the ability to detect, investigate and deal with compromised hosts utilizing a multi-agent scheme in an effective and efficient network intrusion mechanism.  However, DCCP relies heavily on nodes that actively attempt to obtain data that they are not entitled to and tipping their hand in the process.  In the event that an intruder remains passive and only collects data that it unwittingly came across, DCCP will be unable to detect it.  To cover such deficiency, we incorporate pollination into DCCP which provides the ability to detect passive attackers.  As an added bonus, pollination also provides additional forensic capabilities to DCCP (e.g.?).

The role of the pollen can be expanded to include additional functionality.  For example, a heavy burst of pollen issued in short intervals can affect a compromised node, thereby rendering it ineffective and possibly shutting it down or forcing the node to restart which could purge the compromising elements.  Another plausible feature is the pollen's ability to affect an agent's functionality or to modify the data it collects rendering it useless.  A predetermined set of pollen ``colors'' could have different hidden emergency messages that can be relayed by each host to the CAN.  This simple coloring scheme can act as a silent alarm that notifies the CAN for a possible breach in one or more nodes.

% \subsection{Type Changes and {\subsecit Special} Characters}
% We have already seen several typeface changes in this sample.  You
% can indicate italicized words or phrases in your text with
% the command \texttt{{\char'134}textit}; emboldening with the
% command \texttt{{\char'134}textbf}
% and typewriter-style (for instance, for computer code) with
% \texttt{{\char'134}texttt}.  But remember, you do not
% have to indicate typestyle changes when such changes are
% part of the \textit{structural} elements of your
% article; for instance, the heading of this subsection will
% be in a sans serif\footnote{A third footnote, here.
% Let's make this a rather short one to
% see how it looks.} typeface, but that is handled by the
% document class file. Take care with the use
% of\footnote{A fourth, and last, footnote.}
% the curly braces in typeface changes; they mark
% the beginning and end of
% the text that is to be in the different typeface.
% 
% You can use whatever symbols, accented characters, or
% non-English characters you need anywhere in your document;
% you can find a complete list of what is
% available in the \textit{\LaTeX\
% User's Guide}\cite{Lamport:LaTeX}.
% 
% \subsection{Math Equations}
% You may want to display math equations in three distinct styles:
% inline, numbered or non-numbered display.  Each of
% the three are discussed in the next sections.

% \subsubsection{Inline (In-text) Equations}
% A formula that appears in the running text is called an
% inline or in-text formula.  It is produced by the
% \textbf{math} environment, which can be
% invoked with the usual \texttt{{\char'134}begin. . .{\char'134}end}
% construction or with the short form \texttt{\$. . .\$}. You
% can use any of the symbols and structures,
% from $\alpha$ to $\omega$, available in
% \LaTeX\cite{Lamport:LaTeX}; this section will simply show a
% few examples of in-text equations in context. Notice how
% this equation: \begin{math}\lim_{n\rightarrow \infty}x=0\end{math},
% set here in in-line math style, looks slightly different when
% set in display style.  (See next section).
% 
% \subsubsection{Display Equations}
% A numbered display equation -- one set off by vertical space
% from the text and centered horizontally -- is produced
% by the \textbf{equation} environment. An unnumbered display
% equation is produced by the \textbf{displaymath} environment.
% 
% Again, in either environment, you can use any of the symbols
% and structures available in \LaTeX; this section will just
% give a couple of examples of display equations in context.
% First, consider the equation, shown as an inline equation above:
% \begin{equation}\lim_{n\rightarrow \infty}x=0\end{equation}
% Notice how it is formatted somewhat differently in
% the \textbf{displaymath}
% environment.  Now, we'll enter an unnumbered equation:
% \begin{displaymath}\sum_{i=0}^{\infty} x + 1\end{displaymath}
% and follow it with another numbered equation:
% \begin{equation}\sum_{i=0}^{\infty}x_i=\int_{0}^{\pi+2} f\end{equation}
% just to demonstrate \LaTeX's able handling of numbering.
% 
% \subsection{Citations}
% Citations to articles \cite{bowman:reasoning, clark:pct, braams:babel, herlihy:methodology},
% conference
% proceedings \cite{clark:pct} or books \cite{salas:calculus, Lamport:LaTeX} listed
% in the Bibliography section of your
% article will occur throughout the text of your article.
% You should use BibTeX to automatically produce this bibliography;
% you simply need to insert one of several citation commands with
% a key of the item cited in the proper location in
% the \texttt{.tex} file \cite{Lamport:LaTeX}.
% The key is a short reference you invent to uniquely
% identify each work; in this sample document, the key is
% the first author's surname and a
% word from the title.  This identifying key is included
% with each item in the \texttt{.bib} file for your article.
% 
% The details of the construction of the \texttt{.bib} file
% are beyond the scope of this sample document, but more
% information can be found in the \textit{Author's Guide},
% and exhaustive details in the \textit{\LaTeX\ User's
% Guide}\cite{Lamport:LaTeX}.
% 
% This article shows only the plainest form
% of the citation command, using \texttt{{\char'134}cite}.
% This is what is stipulated in the SIGS style specifications.
% No other citation format is endorsed.
% 
% \subsection{Tables}
% Because tables cannot be split across pages, the best
% placement for them is typically the top of the page
% nearest their initial cite.  To
% ensure this proper ``floating'' placement of tables, use the
% environment \textbf{table} to enclose the table's contents and
% the table caption.  The contents of the table itself must go
% in the \textbf{tabular} environment, to
% be aligned properly in rows and columns, with the desired
% horizontal and vertical rules.  Again, detailed instructions
% on \textbf{tabular} material
% is found in the \textit{\LaTeX\ User's Guide}.
% 
% Immediately following this sentence is the point at which
% Table 1 is included in the input file; compare the
% placement of the table here with the table in the printed
% dvi output of this document.
% 
% \begin{table}
% \centering
% \caption{Frequency of Special Characters}
% \begin{tabular}{|c|c|l|} \hline
% Non-English or Math&Frequency&Comments\\ \hline
% \O & 1 in 1,000& For Swedish names\\ \hline
% $\pi$ & 1 in 5& Common in math\\ \hline
% \$ & 4 in 5 & Used in business\\ \hline
% $\Psi^2_1$ & 1 in 40,000& Unexplained usage\\
% \hline\end{tabular}
% \end{table}
% 
% To set a wider table, which takes up the whole width of
% the page's live area, use the environment
% \textbf{table*} to enclose the table's contents and
% the table caption.  As with a single-column table, this wide
% table will ``float" to a location deemed more desirable.
% Immediately following this sentence is the point at which
% Table 2 is included in the input file; again, it is
% instructive to compare the placement of the
% table here with the table in the printed dvi
% output of this document.
% 
% 
% \begin{table*}
% \centering
% \caption{Some Typical Commands}
% \begin{tabular}{|c|c|l|} \hline
% Command&A Number&Comments\\ \hline
% \texttt{{\char'134}alignauthor} & 100& Author alignment\\ \hline
% \texttt{{\char'134}numberofauthors}& 200& Author enumeration\\ \hline
% \texttt{{\char'134}table}& 300 & For tables\\ \hline
% \texttt{{\char'134}table*}& 400& For wider tables\\ \hline\end{tabular}
% \end{table*}
% % end the environment with {table*}, NOTE not {table}!
% 
% \subsection{Figures}
% Like tables, figures cannot be split across pages; the
% best placement for them
% is typically the top or the bottom of the page nearest
% their initial cite.  To ensure this proper ``floating'' placement
% of figures, use the environment
% \textbf{figure} to enclose the figure and its caption.
% 
% This sample document contains examples of \textbf{.eps}
% and \textbf{.ps} files to be displayable with \LaTeX.  More
% details on each of these is found in the \textit{Author's Guide}.
% 
% \begin{figure}
% \centering
% \epsfig{file=fly.eps}
% \caption{A sample black and white graphic (.eps format).}
% \end{figure}
% 
% \begin{figure}
% \centering
% \epsfig{file=fly.eps, height=1in, width=1in}
% \caption{A sample black and white graphic (.eps format)
% that has been resized with the \texttt{epsfig} command.}
% \end{figure}
% 
% 
% As was the case with tables, you may want a figure
% that spans two columns.  To do this, and still to
% ensure proper ``floating'' placement of tables, use the environment
% \textbf{figure*} to enclose the figure and its caption.
% 
% Note that either {\textbf{.ps}} or {\textbf{.eps}} formats are
% used; use
% the \texttt{{\char'134}epsfig} or \texttt{{\char'134}psfig}
% commands as appropriate for the different file types.
% 
% \subsection{Theorem-like Constructs}
% Other common constructs that may occur in your article are
% the forms for logical constructs like theorems, axioms,
% corollaries and proofs.  There are
% two forms, one produced by the
% command \texttt{{\char'134}newtheorem} and the
% other by the command \texttt{{\char'134}newdef}; perhaps
% the clearest and easiest way to distinguish them is
% to compare the two in the output of this sample document:
% 
% This uses the \textbf{theorem} environment, created by
% the\linebreak\texttt{{\char'134}newtheorem} command:
% \newtheorem{theorem}{Theorem}
% \begin{theorem}
% Let $f$ be continuous on $[a,b]$.  If $G$ is
% an antiderivative for $f$ on $[a,b]$, then
% \begin{displaymath}\int^b_af(t)dt = G(b) - G(a).\end{displaymath}
% \end{theorem}
% 
% The other uses the \textbf{definition} environment, created
% by the \texttt{{\char'134}newdef} command:
% \newdef{definition}{Definition}
% \begin{definition}
% If $z$ is irrational, then by $e^z$ we mean the
% unique number which has
% logarithm $z$: \begin{displaymath}{\log e^z = z}\end{displaymath}
% \end{definition}
% 
% \begin{figure}
% \centering
% \psfig{file=rosette.ps, height=1in, width=1in,}
% \caption{A sample black and white graphic (.ps format) that has
% been resized with the \texttt{psfig} command.}
% \end{figure}
% 
% Two lists of constructs that use one of these
% forms is given in the
% \textit{Author's  Guidelines}.
% 
% \begin{figure*}
% \centering
% \epsfig{file=flies.eps}
% \caption{A sample black and white graphic (.eps format)
% that needs to span two columns of text.}
% \end{figure*}
% and don't forget to end the environment with
% {figure*}, not {figure}!
%  
% There is one other similar construct environment, which is
% already set up
% for you; i.e. you must \textit{not} use
% a \texttt{{\char'134}newdef} command to
% create it: the \textbf{proof} environment.  Here
% is a example of its use:
% \begin{proof}
% Suppose on the contrary there exists a real number $L$ such that
% \begin{displaymath}
% \lim_{x\rightarrow\infty} \frac{f(x)}{g(x)} = L.
% \end{displaymath}
% Then
% \begin{displaymath}
% l=\lim_{x\rightarrow c} f(x)
% = \lim_{x\rightarrow c}
% \left[ g{x} \cdot \frac{f(x)}{g(x)} \right ]
% = \lim_{x\rightarrow c} g(x) \cdot \lim_{x\rightarrow c}
% \frac{f(x)}{g(x)} = 0\cdot L = 0,
% \end{displaymath}
% which contradicts our assumption that $l\neq 0$.
% \end{proof}
% 
% Complete rules about using these environments and using the
% two different creation commands are in the
% \textit{Author's Guide}; please consult it for more
% detailed instructions.  If you need to use another construct,
% not listed therein, which you want to have the same
% formatting as the Theorem
% or the Definition\cite{salas:calculus} shown above,
% use the \texttt{{\char'134}newtheorem} or the
% \texttt{{\char'134}newdef} command,
% respectively, to create it.
% 
% \subsection*{A {\secit Caveat} for the \TeX\ Expert}
% Because you have just been given permission to
% use the \texttt{{\char'134}newdef} command to create a
% new form, you might think you can
% use \TeX's \texttt{{\char'134}def} to create a
% new command: \textit{Please refrain from doing this!}
% Remember that your \LaTeX\ source code is primarily intended
% to create camera-ready copy, but may be converted
% to other forms -- e.g. HTML. If you inadvertently omit
% some or all of the \texttt{{\char'134}def}s recompilation will
% be, to say the least, problematic.
% 
% \section{Conclusions}
% This paragraph will end the body of this sample document.
% Remember that you might still have Acknowledgments or
% Appendices; brief samples of these
% follow.  There is still the Bibliography to deal with; and
% we will make a disclaimer about that here: with the exception
% of the reference to the \LaTeX\ book, the citations in
% this paper are to articles which have nothing to
% do with the present subject and are used as
% examples only.
% %\end{document}  % This is where a 'short' article might terminate
% 
% %ACKNOWLEDGMENTS are optional
% \section{Acknowledgments}
% This section is optional; it is a location for you
% to acknowledge grants, funding, editing assistance and
% what have you.  In the present case, for example, the
% authors would like to thank Gerald Murray of ACM for
% his help in codifying this \textit{Author's Guide}
% and the \textbf{.cls} and \textbf{.tex} files that it describes.

%
% The following two commands are all you need in the
% initial runs of your .tex file to
% produce the bibliography for the citations in your paper.
\nocite{*}
\bibliographystyle{abbrv}
\bibliography{sigproc-sp}  % sigproc.bib is the name of the Bibliography in this case


% You must have a proper ".bib" file
%  and remember to run:
% latex bibtex latex latex
% to resolve all references
%
% ACM needs 'a single self-contained file'!
%
%APPENDICES are optional
%\balancecolumns
% \appendix
%Appendix A
% \section{Headings in Appendices}
% The rules about hierarchical headings discussed above for
% the body of the article are different in the appendices.
% In the \textbf{appendix} environment, the command
% \textbf{section} is used to
% indicate the start of each Appendix, with alphabetic order
% designation (i.e. the first is A, the second B, etc.) and
% a title (if you include one).  So, if you need
% hierarchical structure
% \textit{within} an Appendix, start with \textbf{subsection} as the
% highest level. Here is an outline of the body of this
% document in Appendix-appropriate form:
% \subsection{Introduction}
% \subsection{The Body of the Paper}
% \subsubsection{Type Changes and  Special Characters}
% \subsubsection{Math Equations}
% \paragraph{Inline (In-text) Equations}
% \paragraph{Display Equations}
% \subsubsection{Citations}
% \subsubsection{Tables}
% \subsubsection{Figures}
% \subsubsection{Theorem-like Constructs}
% \subsubsection*{A Caveat for the \TeX\ Expert}
% \subsection{Conclusions}
% \subsection{Acknowledgments}
% \subsection{Additional Authors}
% This section is inserted by \LaTeX; you do not insert it.
% You just add the names and information in the
% \texttt{{\char'134}additionalauthors} command at the start
% of the document.
% \section{References}
% Generated by bibtex from your ~.bib file.  Run latex,
% then bibtex, then latex twice (to resolve references)
% to create the ~.bbl file.  Insert that ~.bbl file into
% the .tex source file and comment out
% the command \texttt{{\char'134}thebibliography}.
% This next section command marks the start of
% Appendix B, and does not continue the present hierarchy
% \section{More Help for the Hardy}
% The acm\_proc\_article-sp document class file itself is chock-full of succinct
% and helpful comments.  If you consider yourself a moderately
% experienced to expert user of \LaTeX, you may find reading
% it useful but please remember not to change it.
\balancecolumns
% That's all folks!
\end{document}
